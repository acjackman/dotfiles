# espanso match file

# For a complete introduction, visit the official docs at: https://espanso.org/docs/

# You can use this file to define the base matches (aka snippets)
# that will be available in every application when using espanso.

# Matches are substitution rules: when you type the "trigger" string
# it gets replaced by the "replace" string.
matches:
  - trigger: ";acc"
    replace: "### Acceptance Criteria\n"

  - trigger: ";gh"
    replace: "$(git rev-parse --show-toplevel)"

  - trigger: ";stdd"
    replace: "{{mydate}} Standup"
    vars:
      - name: mydate
        type: date
        params:
          format: "%A"

  # Print the current date
  - trigger: "dstp"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%d"

  - trigger: "dtfstp"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%d-%H-%M-%S"

  - trigger: "dtstp"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%dT%H:%M:%S%Z"

  - trigger: "dwstp"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-W%W"

  - trigger: "dtzstp"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: shell
        params:
          cmd: >
            date -u '+%Y-%m-%d-%H-%M-%SZ'

  - trigger: ",clo"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            pbpaste | pblink --style=org

  - trigger: ",clm"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            pbpaste | pblink --style=md

  # Markdown / Org Conversions
  - trigger: ",cmo"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            pbpaste | pandoc --from markdown --to org --wrap=none

  - trigger: ",com"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            echo "#+OPTIONS: H:9\n`pbpaste`" | pandoc --from org --to markdown --wrap=none | sed '/^$/d'

  - trigger: ";std"
    replace: "{{mydate}} Standup\n{{output}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%Y-%m-%d"
      - name: output
        type: shell
        params:
          cmd: |
            pbpaste \
              | pandoc --from org --to markdown --wrap=none \
            | sed 's/^(y|Y|Yesterday):?$/:hammer_and_wrench: *Yesterday*/' \
            | sed 's/^(t|T|Today):?$/:spiral_calendar_pad: *Yesterday*/' \
            | sed 's/^(b|B|Blockers):?$/:construction: *Blockers*/'

  - trigger: ",standup"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            ~/.dotfiles-local/bin/standup | pbcopy; pbpaste

  - trigger: ";python"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            which -a python

  - trigger: ";path"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: >
            tr ":" "\n" <<< "$PATH"

  - trigger: ";tfdebug"
    force_mode: clipboard
    replace: |
      resource "local_file" "debug" {
        content = yamlencode({

        })
        filename = "DELETEME.yml"
      }

  - trigger: ";;'"
    replace: '''"''"'''

  # Simple substitution
  - trigger: ",hb"
    replace: "harbourbridge"

  - trigger: ",tsk"
    replace: "- [ ] "

  - trigger: ",-["
    replace: "- [ ] "

  # Templates
  - trigger: ";standup"
    replace: |
      ## Yesterday

      ## Today

      ## Blockers

  - trigger: ";pr"
    replace: |
      ## What changed?

      ## How was it done?

      ## How was it tested?

      ## What documentation was updated?

      ## Deploy Notes
